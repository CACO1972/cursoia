# Crear herramientas y recursos espec√≠ficos para implementaci√≥n
import pandas as pd

# Lista de herramientas AI gratuitas y de pago para dentistas
herramientas_ai = {
    'Categor√≠a': [
        'Chatbots', 'Chatbots', 'Chatbots', 'Chatbots',
        'Diagn√≥stico por Im√°genes', 'Diagn√≥stico por Im√°genes', 'Diagn√≥stico por Im√°genes', 'Diagn√≥stico por Im√°genes',
        'Gesti√≥n de Pr√°ctica', 'Gesti√≥n de Pr√°ctica', 'Gesti√≥n de Pr√°ctica', 'Gesti√≥n de Pr√°ctica',
        'Comunicaci√≥n Pacientes', 'Comunicaci√≥n Pacientes', 'Comunicaci√≥n Pacientes', 'Comunicaci√≥n Pacientes',
        'Predicci√≥n/Planificaci√≥n', 'Predicci√≥n/Planificaci√≥n', 'Predicci√≥n/Planificaci√≥n', 'Predicci√≥n/Planificaci√≥n'
    ],
    'Herramienta': [
        'ChatGPT + Zapier', 'Botpress', 'Chatfuel', 'ManyChat',
        'VideaHealth', 'Overjet', 'Diagnocat', 'Pearl AI',
        'Denti.AI', 'Denota.AI', 'Oryx Dental', 'Henry Schein One AI',
        'Arini AI', 'Quriobot', 'Teero', 'DentalMonitoring',
        'Implantif.AI', 'Planmeca AI', 'PreVu Dental', 'CITYPRO (personalizado)'
    ],
    'Precio': [
        'Gratis + $20/mes', '$50/mes', 'Gratis + $15/mes', '$15/mes',
        'Consultar', 'Consultar', 'Consultar', 'Consultar',
        'Desde $99/mes', 'Desde $29/mes', 'Consultar', 'Consultar',
        'Desde $200/mes', 'Desde $39/mes', 'Consultar', 'Consultar',
        'Consultar', 'Incluido en software', 'Desde $49/mes', 'Desarrollo personalizado'
    ],
    'Dificultad_Implementaci√≥n': [
        'F√°cil', 'Media', 'F√°cil', 'F√°cil',
        'Media', 'Media', 'Media', 'Media',
        'Media', 'F√°cil', 'Alta', 'Alta',
        'Media', 'F√°cil', 'Media', 'Alta',
        'Media', 'Alta', 'F√°cil', 'Alta'
    ],
    'Tiempo_Setup': [
        '2-4 horas', '1-2 d√≠as', '2-4 horas', '2-4 horas',
        '1-2 semanas', '1-2 semanas', '1-2 semanas', '1-2 semanas',
        '3-5 d√≠as', '1-2 horas', '2-4 semanas', '2-4 semanas',
        '1 semana', '2-4 horas', '1 semana', '2-4 semanas',
        '1 semana', 'Incluido', '2-4 horas', '2-6 meses'
    ],
    'Mejor_Para': [
        'Consultorios peque√±os', 'Consultorios medianos', 'Inicio r√°pido', 'Marketing dental',
        'Diagn√≥stico avanzado', 'An√°lisis radiogr√°fico', 'Detecci√≥n temprana', 'Educaci√≥n paciente',
        'Documentaci√≥n cl√≠nica', 'Notas r√°pidas', 'Gesti√≥n completa', 'Pr√°ctica empresarial',
        'Recepci√≥n virtual', 'Web b√°sica', 'Comunicaci√≥n integral', 'Ortodoncia',
        'Identificaci√≥n implantes', 'Planificaci√≥n quir√∫rgica', 'Simulaciones est√©ticas', 'Apps predictivas personalizadas'
    ]
}

df_herramientas = pd.DataFrame(herramientas_ai)

print("=== HERRAMIENTAS DE IA PARA CONSULTORIOS DENTALES ===")
print("="*60)

# Mostrar por categor√≠a
for categoria in df_herramientas['Categor√≠a'].unique():
    print(f"\n{categoria.upper()}:")
    print("-" * 40)
    cat_data = df_herramientas[df_herramientas['Categor√≠a'] == categoria]
    
    for _, row in cat_data.iterrows():
        print(f"‚úì {row['Herramienta']}")
        print(f"  Precio: {row['Precio']}")
        print(f"  Dificultad: {row['Dificultad_Implementaci√≥n']}")
        print(f"  Setup: {row['Tiempo_Setup']}")
        print(f"  Ideal para: {row['Mejor_Para']}")
        print()

# Crear plan de implementaci√≥n por fases
fases_implementacion = {
    'Fase': [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4],
    'Nombre_Fase': [
        'Fundamentos y Comunicaci√≥n', 'Fundamentos y Comunicaci√≥n', 'Fundamentos y Comunicaci√≥n',
        'Automatizaci√≥n B√°sica', 'Automatizaci√≥n B√°sica', 'Automatizaci√≥n B√°sica',
        'Diagn√≥stico Asistido', 'Diagn√≥stico Asistido', 'Diagn√≥stico Asistido',
        'Predicci√≥n Avanzada', 'Predicci√≥n Avanzada', 'Predicci√≥n Avanzada'
    ],
    'Acci√≥n': [
        'Configurar ChatGPT para consultas b√°sicas', 
        'Implementar chatbot web simple',
        'Capacitar equipo en IA b√°sica',
        'Automatizar recordatorios de citas',
        'Digitalizar formularios pacientes',
        'Configurar respuestas autom√°ticas WhatsApp',
        'Integrar an√°lisis b√°sico de radiograf√≠as',
        'Implementar educaci√≥n autom√°tica pacientes',
        'Configurar seguimiento post-tratamiento',
        'Integrar predicci√≥n de tratamientos',
        'Implementar planificaci√≥n quir√∫rgica IA',
        'Desarrollar m√©tricas y analytics avanzados'
    ],
    'Duraci√≥n_Semanas': [1, 2, 1, 2, 1, 2, 3, 2, 2, 4, 4, 3],
    'Costo_Estimado_USD': [50, 200, 0, 300, 100, 150, 1500, 500, 300, 2000, 3000, 1000],
    'ROI_Esperado_Mensual': [200, 500, 0, 800, 300, 400, 2000, 1000, 600, 3000, 5000, 2000]
}

df_fases = pd.DataFrame(fases_implementacion)

print("\n" + "="*60)
print("PLAN DE IMPLEMENTACI√ìN POR FASES")
print("="*60)

for fase in df_fases['Fase'].unique():
    fase_data = df_fases[df_fases['Fase'] == fase]
    nombre_fase = fase_data.iloc[0]['Nombre_Fase']
    
    print(f"\nFASE {fase}: {nombre_fase}")
    print("-" * 50)
    
    total_tiempo = fase_data['Duraci√≥n_Semanas'].sum()
    total_costo = fase_data['Costo_Estimado_USD'].sum()
    total_roi = fase_data['ROI_Esperado_Mensual'].sum()
    
    print(f"Duraci√≥n total: {total_tiempo} semanas")
    print(f"Inversi√≥n total: ${total_costo:,} USD")
    print(f"ROI esperado mensual: ${total_roi:,} USD")
    print(f"Payback period: {total_costo/total_roi:.1f} meses")
    print("\nAcciones:")
    
    for _, row in fase_data.iterrows():
        print(f"‚Ä¢ {row['Acci√≥n']}")
        print(f"  ‚è±Ô∏è {row['Duraci√≥n_Semanas']} semanas | üí∞ ${row['Costo_Estimado_USD']} | üìà +${row['ROI_Esperado_Mensual']}/mes")

# Guardar archivos
df_herramientas.to_csv('herramientas_ia_dental.csv', index=False, encoding='utf-8')
df_fases.to_csv('plan_implementacion_fases.csv', index=False, encoding='utf-8')

print(f"\n\nArchivos guardados:")
print("‚Ä¢ herramientas_ia_dental.csv")
print("‚Ä¢ plan_implementacion_fases.csv")