# Crear ejemplos espec√≠ficos de implementaci√≥n pr√°ctica
practicas_ejemplos = {
    'Herramienta': [
        'ChatGPT para Consultas', 'Chatbot Web B√°sico', 'WhatsApp Business',
        'An√°lisis de Radiograf√≠as', 'Educaci√≥n de Pacientes', 'Gesti√≥n de Citas',
        'Predicci√≥n de Implantes', 'Seguimiento Post-tratamiento'
    ],
    'Caso_de_Uso': [
        'Responder preguntas frecuentes sobre tratamientos',
        'Agendar citas autom√°ticamente desde la web',
        'Confirmar citas y enviar recordatorios',
        'Detectar caries en radiograf√≠as panor√°micas',
        'Explicar procedimientos con videos personalizados',
        'Optimizar agenda y reducir cancelaciones',
        'Evaluar probabilidad de √©xito de implante',
        'Monitorear recuperaci√≥n y detectar complicaciones'
    ],
    'Implementaci√≥n_Pr√°ctica': [
        'Crear prompts espec√≠ficos: "Eres un asistente dental. Explica en t√©rminos simples qu√© es una endodoncia"',
        'Usar Chatfuel: Conectar con agenda online + respuestas autom√°ticas FAQ',
        'WhatsApp Business API: Configurar flujos autom√°ticos para confirmaci√≥n de citas',
        'Overjet/VideaHealth: Cargar radiograf√≠a ‚Üí obtener an√°lisis autom√°tico en 30 segundos',
        'ChatGPT + Canva: Generar explicaciones + crear infograf√≠as personalizadas por tratamiento',
        'Calendly + Zapier: Sincronizar con software dental + enviar recordatorios SMS',
        'Implantif.AI: Cargar datos paciente ‚Üí obtener score de probabilidad de √©xito',
        'Denti.AI: Configurar alertas autom√°ticas por s√≠ntomas reportados via formulario'
    ],
    'Tiempo_Setup': [
        '2 horas', '4 horas', '6 horas',
        '1 semana', '8 horas', '1 d√≠a',
        '2 semanas', '3 d√≠as'
    ],
    'Costo_Mensual': [
        '$20', '$39', '$50',
        '$300', '$100', '$80',
        '$500', '$150'
    ],
    'ROI_Esperado_Mensual': [
        '$200', '$500', '$400',
        '$2000', '$800', '$600',
        '$3000', '$1000'
    ],
    'M√©tricas_de_√âxito': [
        '80% menos consultas telef√≥nicas repetitivas',
        '40% m√°s citas agendadas online',
        '70% menos no-shows por recordatorios autom√°ticos',
        '60% m√°s detecci√≥n temprana de caries',
        '90% mejor comprensi√≥n de tratamientos por pacientes',
        '50% mejor utilizaci√≥n de agenda',
        '85% precisi√≥n en predicci√≥n de √©xito',
        '30% menos complicaciones post-operatorias'
    ]
}

df_ejemplos = pd.DataFrame(practicas_ejemplos)

print("=== EJEMPLOS PR√ÅCTICOS DE IMPLEMENTACI√ìN DE IA DENTAL ===")
print("="*70)

for i, row in df_ejemplos.iterrows():
    print(f"\nüîß {row['Herramienta']}")
    print("-" * 50)
    print(f"üìã Caso de uso: {row['Caso_de_Uso']}")
    print(f"‚ö° Implementaci√≥n: {row['Implementaci√≥n_Pr√°ctica']}")
    print(f"‚è±Ô∏è  Setup: {row['Tiempo_Setup']}")
    print(f"üí∞ Costo: {row['Costo_Mensual']}/mes")
    print(f"üìà ROI: {row['ROI_Esperado_Mensual']}/mes")
    print(f"üìä Resultado: {row['M√©tricas_de_√âxito']}")

# Crear flujo de trabajo espec√≠fico para implementaci√≥n
flujo_implementacion = {
    'Semana': list(range(1, 13)),
    'Actividad_Principal': [
        'Configurar ChatGPT y crear primeros prompts dentales',
        'Implementar chatbot b√°sico en website',
        'Conectar WhatsApp Business y configurar respuestas autom√°ticas',
        'Capacitar equipo en uso b√°sico de herramientas IA',
        'Integrar primera herramientas de an√°lisis de im√°genes',
        'Configurar automatizaci√≥n de citas y recordatorios',
        'Implementar sistema de educaci√≥n autom√°tica de pacientes',
        'Configurar seguimiento post-tratamiento automatizado',
        'Integrar herramientas de predicci√≥n b√°sicas',
        'Configurar reportes y analytics autom√°ticos',
        'Optimizar todos los sistemas implementados',
        'Evaluar resultados y planificar siguientes fases'
    ],
    'Tiempo_Dedicado_Horas': [4, 6, 8, 2, 12, 6, 8, 6, 10, 4, 8, 4],
    'Inversi√≥n_Semanal': [50, 100, 75, 0, 400, 150, 200, 100, 300, 100, 50, 0],
    'Personal_Involucrado': [
        'Dentista + Recepcionista',
        'Dentista + T√©cnico',
        'Recepcionista + Asistente',
        'Todo el equipo',
        'Dentista + T√©cnico',
        'Recepcionista + Administrador',
        'Dentista + Asistente',
        'Asistente + Recepcionista',
        'Dentista + T√©cnico',
        'Administrador',
        'Todo el equipo',
        'Dentista + Administrador'
    ],
    'Resultado_Esperado': [
        'Respuestas autom√°ticas a 80% consultas b√°sicas',
        'Aumento 30% en citas agendadas online',
        'Reducci√≥n 60% en no-shows',
        'Equipo capacitado en herramientas b√°sicas',
        'Detecci√≥n autom√°tica b√°sica en radiograf√≠as',
        'Agenda optimizada autom√°ticamente',
        'Pacientes mejor educados sobre tratamientos',
        'Monitoreo autom√°tico de recuperaci√≥n',
        'Predicciones b√°sicas de √©xito de tratamientos',
        'Reportes autom√°ticos semanales',
        'Sistema completo funcionando √≥ptimamente',
        'Plan para siguientes 6 meses definido'
    ]
}

df_flujo = pd.DataFrame(flujo_implementacion)

print(f"\n\n{'='*70}")
print("CRONOGRAMA DE IMPLEMENTACI√ìN (12 SEMANAS)")
print("="*70)

total_horas = df_flujo['Tiempo_Dedicado_Horas'].sum()
total_inversion = df_flujo['Inversi√≥n_Semanal'].sum()

print(f"Tiempo total de implementaci√≥n: {total_horas} horas")
print(f"Inversi√≥n total: ${total_inversion:,} USD")
print(f"Promedio semanal: {total_horas/12:.1f} horas, ${total_inversion/12:.0f} USD")

for i, row in df_flujo.iterrows():
    print(f"\nüìÖ SEMANA {row['Semana']}")
    print(f"üéØ Actividad: {row['Actividad_Principal']}")
    print(f"‚è∞ Tiempo: {row['Tiempo_Dedicado_Horas']} horas")
    print(f"üí∞ Inversi√≥n: ${row['Inversi√≥n_Semanal']} USD")
    print(f"üë• Equipo: {row['Personal_Involucrado']}")
    print(f"üéØ Resultado: {row['Resultado_Esperado']}")

# Guardar archivos
df_ejemplos.to_csv('ejemplos_implementacion_practica.csv', index=False, encoding='utf-8')
df_flujo.to_csv('cronograma_implementacion_12_semanas.csv', index=False, encoding='utf-8')

print(f"\n\nArchivos guardados:")
print("‚Ä¢ ejemplos_implementacion_practica.csv")
print("‚Ä¢ cronograma_implementacion_12_semanas.csv")